/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from "./routes/__root";
import { Route as PredictRouteImport } from "./routes/predict";
import { Route as MarketplaceRouteImport } from "./routes/marketplace";
import { Route as LeaderboardRouteImport } from "./routes/leaderboard";
import { Route as GuildsRouteImport } from "./routes/guilds";
import { Route as AboutRouteImport } from "./routes/about";
import { Route as IndexRouteImport } from "./routes/index";
import { Route as PlayerPlayerRouteImport } from "./routes/player/$player";
import { Route as GameGameRouteImport } from "./routes/game/$game";
import { Route as CollectionCollectionRouteImport } from "./routes/collection/$collection";
import { Route as PlayerPlayerPositionsRouteImport } from "./routes/player/$player/positions";
import { Route as PlayerPlayerInventoryRouteImport } from "./routes/player/$player/inventory";
import { Route as PlayerPlayerActivityRouteImport } from "./routes/player/$player/activity";
import { Route as PlayerPlayerAchievementsRouteImport } from "./routes/player/$player/achievements";
import { Route as GameGamePredictRouteImport } from "./routes/game/$game/predict";
import { Route as GameGameMarketplaceRouteImport } from "./routes/game/$game/marketplace";
import { Route as GameGameLeaderboardRouteImport } from "./routes/game/$game/leaderboard";
import { Route as GameGameGuildsRouteImport } from "./routes/game/$game/guilds";
import { Route as GameGameAboutRouteImport } from "./routes/game/$game/about";
import { Route as CollectionCollectionItemsRouteImport } from "./routes/collection/$collection/items";
import { Route as CollectionCollectionHoldersRouteImport } from "./routes/collection/$collection/holders";
import { Route as CollectionCollectionActivityRouteImport } from "./routes/collection/$collection/activity";
import { Route as GameGamePlayerPlayerRouteImport } from "./routes/game/$game_/player/$player";
import { Route as GameGameEditionEditionRouteImport } from "./routes/game/$game/edition/$edition";
import { Route as GameGameCollectionCollectionRouteImport } from "./routes/game/$game/collection/$collection";
import { Route as GameGamePlayerPlayerPositionsRouteImport } from "./routes/game/$game_/player/$player/positions";
import { Route as GameGamePlayerPlayerInventoryRouteImport } from "./routes/game/$game_/player/$player/inventory";
import { Route as GameGamePlayerPlayerActivityRouteImport } from "./routes/game/$game_/player/$player/activity";
import { Route as GameGamePlayerPlayerAchievementsRouteImport } from "./routes/game/$game_/player/$player/achievements";
import { Route as GameGameEditionEditionMarketplaceRouteImport } from "./routes/game/$game/edition/$edition/marketplace";
import { Route as GameGameEditionEditionLeaderboardRouteImport } from "./routes/game/$game/edition/$edition/leaderboard";
import { Route as GameGameEditionEditionGuildsRouteImport } from "./routes/game/$game/edition/$edition/guilds";
import { Route as GameGameEditionEditionActivityRouteImport } from "./routes/game/$game/edition/$edition/activity";
import { Route as GameGameEditionEditionAboutRouteImport } from "./routes/game/$game/edition/$edition/about";
import { Route as GameGameCollectionCollectionItemsRouteImport } from "./routes/game/$game/collection/$collection/items";
import { Route as GameGameCollectionCollectionHoldersRouteImport } from "./routes/game/$game/collection/$collection/holders";
import { Route as GameGameCollectionCollectionActivityRouteImport } from "./routes/game/$game/collection/$collection/activity";
import { Route as GameGameEditionEditionCollectionCollectionRouteImport } from "./routes/game/$game/edition/$edition/collection/$collection";
import { Route as GameGameEditionEditionCollectionCollectionItemsRouteImport } from "./routes/game/$game/edition/$edition/collection/$collection/items";
import { Route as GameGameEditionEditionCollectionCollectionHoldersRouteImport } from "./routes/game/$game/edition/$edition/collection/$collection/holders";
import { Route as GameGameEditionEditionCollectionCollectionActivityRouteImport } from "./routes/game/$game/edition/$edition/collection/$collection/activity";

const PredictRoute = PredictRouteImport.update({
  id: "/predict",
  path: "/predict",
  getParentRoute: () => rootRouteImport,
} as any);
const MarketplaceRoute = MarketplaceRouteImport.update({
  id: "/marketplace",
  path: "/marketplace",
  getParentRoute: () => rootRouteImport,
} as any);
const LeaderboardRoute = LeaderboardRouteImport.update({
  id: "/leaderboard",
  path: "/leaderboard",
  getParentRoute: () => rootRouteImport,
} as any);
const GuildsRoute = GuildsRouteImport.update({
  id: "/guilds",
  path: "/guilds",
  getParentRoute: () => rootRouteImport,
} as any);
const AboutRoute = AboutRouteImport.update({
  id: "/about",
  path: "/about",
  getParentRoute: () => rootRouteImport,
} as any);
const IndexRoute = IndexRouteImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRouteImport,
} as any);
const PlayerPlayerRoute = PlayerPlayerRouteImport.update({
  id: "/player/$player",
  path: "/player/$player",
  getParentRoute: () => rootRouteImport,
} as any);
const GameGameRoute = GameGameRouteImport.update({
  id: "/game/$game",
  path: "/game/$game",
  getParentRoute: () => rootRouteImport,
} as any);
const CollectionCollectionRoute = CollectionCollectionRouteImport.update({
  id: "/collection/$collection",
  path: "/collection/$collection",
  getParentRoute: () => rootRouteImport,
} as any);
const PlayerPlayerPositionsRoute = PlayerPlayerPositionsRouteImport.update({
  id: "/positions",
  path: "/positions",
  getParentRoute: () => PlayerPlayerRoute,
} as any);
const PlayerPlayerInventoryRoute = PlayerPlayerInventoryRouteImport.update({
  id: "/inventory",
  path: "/inventory",
  getParentRoute: () => PlayerPlayerRoute,
} as any);
const PlayerPlayerActivityRoute = PlayerPlayerActivityRouteImport.update({
  id: "/activity",
  path: "/activity",
  getParentRoute: () => PlayerPlayerRoute,
} as any);
const PlayerPlayerAchievementsRoute =
  PlayerPlayerAchievementsRouteImport.update({
    id: "/achievements",
    path: "/achievements",
    getParentRoute: () => PlayerPlayerRoute,
  } as any);
const GameGamePredictRoute = GameGamePredictRouteImport.update({
  id: "/predict",
  path: "/predict",
  getParentRoute: () => GameGameRoute,
} as any);
const GameGameMarketplaceRoute = GameGameMarketplaceRouteImport.update({
  id: "/marketplace",
  path: "/marketplace",
  getParentRoute: () => GameGameRoute,
} as any);
const GameGameLeaderboardRoute = GameGameLeaderboardRouteImport.update({
  id: "/leaderboard",
  path: "/leaderboard",
  getParentRoute: () => GameGameRoute,
} as any);
const GameGameGuildsRoute = GameGameGuildsRouteImport.update({
  id: "/guilds",
  path: "/guilds",
  getParentRoute: () => GameGameRoute,
} as any);
const GameGameAboutRoute = GameGameAboutRouteImport.update({
  id: "/about",
  path: "/about",
  getParentRoute: () => GameGameRoute,
} as any);
const CollectionCollectionItemsRoute =
  CollectionCollectionItemsRouteImport.update({
    id: "/items",
    path: "/items",
    getParentRoute: () => CollectionCollectionRoute,
  } as any);
const CollectionCollectionHoldersRoute =
  CollectionCollectionHoldersRouteImport.update({
    id: "/holders",
    path: "/holders",
    getParentRoute: () => CollectionCollectionRoute,
  } as any);
const CollectionCollectionActivityRoute =
  CollectionCollectionActivityRouteImport.update({
    id: "/activity",
    path: "/activity",
    getParentRoute: () => CollectionCollectionRoute,
  } as any);
const GameGamePlayerPlayerRoute = GameGamePlayerPlayerRouteImport.update({
  id: "/game/$game_/player/$player",
  path: "/game/$game/player/$player",
  getParentRoute: () => rootRouteImport,
} as any);
const GameGameEditionEditionRoute = GameGameEditionEditionRouteImport.update({
  id: "/edition/$edition",
  path: "/edition/$edition",
  getParentRoute: () => GameGameRoute,
} as any);
const GameGameCollectionCollectionRoute =
  GameGameCollectionCollectionRouteImport.update({
    id: "/collection/$collection",
    path: "/collection/$collection",
    getParentRoute: () => GameGameRoute,
  } as any);
const GameGamePlayerPlayerPositionsRoute =
  GameGamePlayerPlayerPositionsRouteImport.update({
    id: "/positions",
    path: "/positions",
    getParentRoute: () => GameGamePlayerPlayerRoute,
  } as any);
const GameGamePlayerPlayerInventoryRoute =
  GameGamePlayerPlayerInventoryRouteImport.update({
    id: "/inventory",
    path: "/inventory",
    getParentRoute: () => GameGamePlayerPlayerRoute,
  } as any);
const GameGamePlayerPlayerActivityRoute =
  GameGamePlayerPlayerActivityRouteImport.update({
    id: "/activity",
    path: "/activity",
    getParentRoute: () => GameGamePlayerPlayerRoute,
  } as any);
const GameGamePlayerPlayerAchievementsRoute =
  GameGamePlayerPlayerAchievementsRouteImport.update({
    id: "/achievements",
    path: "/achievements",
    getParentRoute: () => GameGamePlayerPlayerRoute,
  } as any);
const GameGameEditionEditionMarketplaceRoute =
  GameGameEditionEditionMarketplaceRouteImport.update({
    id: "/marketplace",
    path: "/marketplace",
    getParentRoute: () => GameGameEditionEditionRoute,
  } as any);
const GameGameEditionEditionLeaderboardRoute =
  GameGameEditionEditionLeaderboardRouteImport.update({
    id: "/leaderboard",
    path: "/leaderboard",
    getParentRoute: () => GameGameEditionEditionRoute,
  } as any);
const GameGameEditionEditionGuildsRoute =
  GameGameEditionEditionGuildsRouteImport.update({
    id: "/guilds",
    path: "/guilds",
    getParentRoute: () => GameGameEditionEditionRoute,
  } as any);
const GameGameEditionEditionActivityRoute =
  GameGameEditionEditionActivityRouteImport.update({
    id: "/activity",
    path: "/activity",
    getParentRoute: () => GameGameEditionEditionRoute,
  } as any);
const GameGameEditionEditionAboutRoute =
  GameGameEditionEditionAboutRouteImport.update({
    id: "/about",
    path: "/about",
    getParentRoute: () => GameGameEditionEditionRoute,
  } as any);
const GameGameCollectionCollectionItemsRoute =
  GameGameCollectionCollectionItemsRouteImport.update({
    id: "/items",
    path: "/items",
    getParentRoute: () => GameGameCollectionCollectionRoute,
  } as any);
const GameGameCollectionCollectionHoldersRoute =
  GameGameCollectionCollectionHoldersRouteImport.update({
    id: "/holders",
    path: "/holders",
    getParentRoute: () => GameGameCollectionCollectionRoute,
  } as any);
const GameGameCollectionCollectionActivityRoute =
  GameGameCollectionCollectionActivityRouteImport.update({
    id: "/activity",
    path: "/activity",
    getParentRoute: () => GameGameCollectionCollectionRoute,
  } as any);
const GameGameEditionEditionCollectionCollectionRoute =
  GameGameEditionEditionCollectionCollectionRouteImport.update({
    id: "/collection/$collection",
    path: "/collection/$collection",
    getParentRoute: () => GameGameEditionEditionRoute,
  } as any);
const GameGameEditionEditionCollectionCollectionItemsRoute =
  GameGameEditionEditionCollectionCollectionItemsRouteImport.update({
    id: "/items",
    path: "/items",
    getParentRoute: () => GameGameEditionEditionCollectionCollectionRoute,
  } as any);
const GameGameEditionEditionCollectionCollectionHoldersRoute =
  GameGameEditionEditionCollectionCollectionHoldersRouteImport.update({
    id: "/holders",
    path: "/holders",
    getParentRoute: () => GameGameEditionEditionCollectionCollectionRoute,
  } as any);
const GameGameEditionEditionCollectionCollectionActivityRoute =
  GameGameEditionEditionCollectionCollectionActivityRouteImport.update({
    id: "/activity",
    path: "/activity",
    getParentRoute: () => GameGameEditionEditionCollectionCollectionRoute,
  } as any);

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute;
  "/about": typeof AboutRoute;
  "/guilds": typeof GuildsRoute;
  "/leaderboard": typeof LeaderboardRoute;
  "/marketplace": typeof MarketplaceRoute;
  "/predict": typeof PredictRoute;
  "/collection/$collection": typeof CollectionCollectionRouteWithChildren;
  "/game/$game": typeof GameGameRouteWithChildren;
  "/player/$player": typeof PlayerPlayerRouteWithChildren;
  "/collection/$collection/activity": typeof CollectionCollectionActivityRoute;
  "/collection/$collection/holders": typeof CollectionCollectionHoldersRoute;
  "/collection/$collection/items": typeof CollectionCollectionItemsRoute;
  "/game/$game/about": typeof GameGameAboutRoute;
  "/game/$game/guilds": typeof GameGameGuildsRoute;
  "/game/$game/leaderboard": typeof GameGameLeaderboardRoute;
  "/game/$game/marketplace": typeof GameGameMarketplaceRoute;
  "/game/$game/predict": typeof GameGamePredictRoute;
  "/player/$player/achievements": typeof PlayerPlayerAchievementsRoute;
  "/player/$player/activity": typeof PlayerPlayerActivityRoute;
  "/player/$player/inventory": typeof PlayerPlayerInventoryRoute;
  "/player/$player/positions": typeof PlayerPlayerPositionsRoute;
  "/game/$game/collection/$collection": typeof GameGameCollectionCollectionRouteWithChildren;
  "/game/$game/edition/$edition": typeof GameGameEditionEditionRouteWithChildren;
  "/game/$game/player/$player": typeof GameGamePlayerPlayerRouteWithChildren;
  "/game/$game/collection/$collection/activity": typeof GameGameCollectionCollectionActivityRoute;
  "/game/$game/collection/$collection/holders": typeof GameGameCollectionCollectionHoldersRoute;
  "/game/$game/collection/$collection/items": typeof GameGameCollectionCollectionItemsRoute;
  "/game/$game/edition/$edition/about": typeof GameGameEditionEditionAboutRoute;
  "/game/$game/edition/$edition/activity": typeof GameGameEditionEditionActivityRoute;
  "/game/$game/edition/$edition/guilds": typeof GameGameEditionEditionGuildsRoute;
  "/game/$game/edition/$edition/leaderboard": typeof GameGameEditionEditionLeaderboardRoute;
  "/game/$game/edition/$edition/marketplace": typeof GameGameEditionEditionMarketplaceRoute;
  "/game/$game/player/$player/achievements": typeof GameGamePlayerPlayerAchievementsRoute;
  "/game/$game/player/$player/activity": typeof GameGamePlayerPlayerActivityRoute;
  "/game/$game/player/$player/inventory": typeof GameGamePlayerPlayerInventoryRoute;
  "/game/$game/player/$player/positions": typeof GameGamePlayerPlayerPositionsRoute;
  "/game/$game/edition/$edition/collection/$collection": typeof GameGameEditionEditionCollectionCollectionRouteWithChildren;
  "/game/$game/edition/$edition/collection/$collection/activity": typeof GameGameEditionEditionCollectionCollectionActivityRoute;
  "/game/$game/edition/$edition/collection/$collection/holders": typeof GameGameEditionEditionCollectionCollectionHoldersRoute;
  "/game/$game/edition/$edition/collection/$collection/items": typeof GameGameEditionEditionCollectionCollectionItemsRoute;
}
export interface FileRoutesByTo {
  "/": typeof IndexRoute;
  "/about": typeof AboutRoute;
  "/guilds": typeof GuildsRoute;
  "/leaderboard": typeof LeaderboardRoute;
  "/marketplace": typeof MarketplaceRoute;
  "/predict": typeof PredictRoute;
  "/collection/$collection": typeof CollectionCollectionRouteWithChildren;
  "/game/$game": typeof GameGameRouteWithChildren;
  "/player/$player": typeof PlayerPlayerRouteWithChildren;
  "/collection/$collection/activity": typeof CollectionCollectionActivityRoute;
  "/collection/$collection/holders": typeof CollectionCollectionHoldersRoute;
  "/collection/$collection/items": typeof CollectionCollectionItemsRoute;
  "/game/$game/about": typeof GameGameAboutRoute;
  "/game/$game/guilds": typeof GameGameGuildsRoute;
  "/game/$game/leaderboard": typeof GameGameLeaderboardRoute;
  "/game/$game/marketplace": typeof GameGameMarketplaceRoute;
  "/game/$game/predict": typeof GameGamePredictRoute;
  "/player/$player/achievements": typeof PlayerPlayerAchievementsRoute;
  "/player/$player/activity": typeof PlayerPlayerActivityRoute;
  "/player/$player/inventory": typeof PlayerPlayerInventoryRoute;
  "/player/$player/positions": typeof PlayerPlayerPositionsRoute;
  "/game/$game/collection/$collection": typeof GameGameCollectionCollectionRouteWithChildren;
  "/game/$game/edition/$edition": typeof GameGameEditionEditionRouteWithChildren;
  "/game/$game/player/$player": typeof GameGamePlayerPlayerRouteWithChildren;
  "/game/$game/collection/$collection/activity": typeof GameGameCollectionCollectionActivityRoute;
  "/game/$game/collection/$collection/holders": typeof GameGameCollectionCollectionHoldersRoute;
  "/game/$game/collection/$collection/items": typeof GameGameCollectionCollectionItemsRoute;
  "/game/$game/edition/$edition/about": typeof GameGameEditionEditionAboutRoute;
  "/game/$game/edition/$edition/activity": typeof GameGameEditionEditionActivityRoute;
  "/game/$game/edition/$edition/guilds": typeof GameGameEditionEditionGuildsRoute;
  "/game/$game/edition/$edition/leaderboard": typeof GameGameEditionEditionLeaderboardRoute;
  "/game/$game/edition/$edition/marketplace": typeof GameGameEditionEditionMarketplaceRoute;
  "/game/$game/player/$player/achievements": typeof GameGamePlayerPlayerAchievementsRoute;
  "/game/$game/player/$player/activity": typeof GameGamePlayerPlayerActivityRoute;
  "/game/$game/player/$player/inventory": typeof GameGamePlayerPlayerInventoryRoute;
  "/game/$game/player/$player/positions": typeof GameGamePlayerPlayerPositionsRoute;
  "/game/$game/edition/$edition/collection/$collection": typeof GameGameEditionEditionCollectionCollectionRouteWithChildren;
  "/game/$game/edition/$edition/collection/$collection/activity": typeof GameGameEditionEditionCollectionCollectionActivityRoute;
  "/game/$game/edition/$edition/collection/$collection/holders": typeof GameGameEditionEditionCollectionCollectionHoldersRoute;
  "/game/$game/edition/$edition/collection/$collection/items": typeof GameGameEditionEditionCollectionCollectionItemsRoute;
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport;
  "/": typeof IndexRoute;
  "/about": typeof AboutRoute;
  "/guilds": typeof GuildsRoute;
  "/leaderboard": typeof LeaderboardRoute;
  "/marketplace": typeof MarketplaceRoute;
  "/predict": typeof PredictRoute;
  "/collection/$collection": typeof CollectionCollectionRouteWithChildren;
  "/game/$game": typeof GameGameRouteWithChildren;
  "/player/$player": typeof PlayerPlayerRouteWithChildren;
  "/collection/$collection/activity": typeof CollectionCollectionActivityRoute;
  "/collection/$collection/holders": typeof CollectionCollectionHoldersRoute;
  "/collection/$collection/items": typeof CollectionCollectionItemsRoute;
  "/game/$game/about": typeof GameGameAboutRoute;
  "/game/$game/guilds": typeof GameGameGuildsRoute;
  "/game/$game/leaderboard": typeof GameGameLeaderboardRoute;
  "/game/$game/marketplace": typeof GameGameMarketplaceRoute;
  "/game/$game/predict": typeof GameGamePredictRoute;
  "/player/$player/achievements": typeof PlayerPlayerAchievementsRoute;
  "/player/$player/activity": typeof PlayerPlayerActivityRoute;
  "/player/$player/inventory": typeof PlayerPlayerInventoryRoute;
  "/player/$player/positions": typeof PlayerPlayerPositionsRoute;
  "/game/$game/collection/$collection": typeof GameGameCollectionCollectionRouteWithChildren;
  "/game/$game/edition/$edition": typeof GameGameEditionEditionRouteWithChildren;
  "/game/$game_/player/$player": typeof GameGamePlayerPlayerRouteWithChildren;
  "/game/$game/collection/$collection/activity": typeof GameGameCollectionCollectionActivityRoute;
  "/game/$game/collection/$collection/holders": typeof GameGameCollectionCollectionHoldersRoute;
  "/game/$game/collection/$collection/items": typeof GameGameCollectionCollectionItemsRoute;
  "/game/$game/edition/$edition/about": typeof GameGameEditionEditionAboutRoute;
  "/game/$game/edition/$edition/activity": typeof GameGameEditionEditionActivityRoute;
  "/game/$game/edition/$edition/guilds": typeof GameGameEditionEditionGuildsRoute;
  "/game/$game/edition/$edition/leaderboard": typeof GameGameEditionEditionLeaderboardRoute;
  "/game/$game/edition/$edition/marketplace": typeof GameGameEditionEditionMarketplaceRoute;
  "/game/$game_/player/$player/achievements": typeof GameGamePlayerPlayerAchievementsRoute;
  "/game/$game_/player/$player/activity": typeof GameGamePlayerPlayerActivityRoute;
  "/game/$game_/player/$player/inventory": typeof GameGamePlayerPlayerInventoryRoute;
  "/game/$game_/player/$player/positions": typeof GameGamePlayerPlayerPositionsRoute;
  "/game/$game/edition/$edition/collection/$collection": typeof GameGameEditionEditionCollectionCollectionRouteWithChildren;
  "/game/$game/edition/$edition/collection/$collection/activity": typeof GameGameEditionEditionCollectionCollectionActivityRoute;
  "/game/$game/edition/$edition/collection/$collection/holders": typeof GameGameEditionEditionCollectionCollectionHoldersRoute;
  "/game/$game/edition/$edition/collection/$collection/items": typeof GameGameEditionEditionCollectionCollectionItemsRoute;
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | "/"
    | "/about"
    | "/guilds"
    | "/leaderboard"
    | "/marketplace"
    | "/predict"
    | "/collection/$collection"
    | "/game/$game"
    | "/player/$player"
    | "/collection/$collection/activity"
    | "/collection/$collection/holders"
    | "/collection/$collection/items"
    | "/game/$game/about"
    | "/game/$game/guilds"
    | "/game/$game/leaderboard"
    | "/game/$game/marketplace"
    | "/game/$game/predict"
    | "/player/$player/achievements"
    | "/player/$player/activity"
    | "/player/$player/inventory"
    | "/player/$player/positions"
    | "/game/$game/collection/$collection"
    | "/game/$game/edition/$edition"
    | "/game/$game/player/$player"
    | "/game/$game/collection/$collection/activity"
    | "/game/$game/collection/$collection/holders"
    | "/game/$game/collection/$collection/items"
    | "/game/$game/edition/$edition/about"
    | "/game/$game/edition/$edition/activity"
    | "/game/$game/edition/$edition/guilds"
    | "/game/$game/edition/$edition/leaderboard"
    | "/game/$game/edition/$edition/marketplace"
    | "/game/$game/player/$player/achievements"
    | "/game/$game/player/$player/activity"
    | "/game/$game/player/$player/inventory"
    | "/game/$game/player/$player/positions"
    | "/game/$game/edition/$edition/collection/$collection"
    | "/game/$game/edition/$edition/collection/$collection/activity"
    | "/game/$game/edition/$edition/collection/$collection/holders"
    | "/game/$game/edition/$edition/collection/$collection/items";
  fileRoutesByTo: FileRoutesByTo;
  to:
    | "/"
    | "/about"
    | "/guilds"
    | "/leaderboard"
    | "/marketplace"
    | "/predict"
    | "/collection/$collection"
    | "/game/$game"
    | "/player/$player"
    | "/collection/$collection/activity"
    | "/collection/$collection/holders"
    | "/collection/$collection/items"
    | "/game/$game/about"
    | "/game/$game/guilds"
    | "/game/$game/leaderboard"
    | "/game/$game/marketplace"
    | "/game/$game/predict"
    | "/player/$player/achievements"
    | "/player/$player/activity"
    | "/player/$player/inventory"
    | "/player/$player/positions"
    | "/game/$game/collection/$collection"
    | "/game/$game/edition/$edition"
    | "/game/$game/player/$player"
    | "/game/$game/collection/$collection/activity"
    | "/game/$game/collection/$collection/holders"
    | "/game/$game/collection/$collection/items"
    | "/game/$game/edition/$edition/about"
    | "/game/$game/edition/$edition/activity"
    | "/game/$game/edition/$edition/guilds"
    | "/game/$game/edition/$edition/leaderboard"
    | "/game/$game/edition/$edition/marketplace"
    | "/game/$game/player/$player/achievements"
    | "/game/$game/player/$player/activity"
    | "/game/$game/player/$player/inventory"
    | "/game/$game/player/$player/positions"
    | "/game/$game/edition/$edition/collection/$collection"
    | "/game/$game/edition/$edition/collection/$collection/activity"
    | "/game/$game/edition/$edition/collection/$collection/holders"
    | "/game/$game/edition/$edition/collection/$collection/items";
  id:
    | "__root__"
    | "/"
    | "/about"
    | "/guilds"
    | "/leaderboard"
    | "/marketplace"
    | "/predict"
    | "/collection/$collection"
    | "/game/$game"
    | "/player/$player"
    | "/collection/$collection/activity"
    | "/collection/$collection/holders"
    | "/collection/$collection/items"
    | "/game/$game/about"
    | "/game/$game/guilds"
    | "/game/$game/leaderboard"
    | "/game/$game/marketplace"
    | "/game/$game/predict"
    | "/player/$player/achievements"
    | "/player/$player/activity"
    | "/player/$player/inventory"
    | "/player/$player/positions"
    | "/game/$game/collection/$collection"
    | "/game/$game/edition/$edition"
    | "/game/$game_/player/$player"
    | "/game/$game/collection/$collection/activity"
    | "/game/$game/collection/$collection/holders"
    | "/game/$game/collection/$collection/items"
    | "/game/$game/edition/$edition/about"
    | "/game/$game/edition/$edition/activity"
    | "/game/$game/edition/$edition/guilds"
    | "/game/$game/edition/$edition/leaderboard"
    | "/game/$game/edition/$edition/marketplace"
    | "/game/$game_/player/$player/achievements"
    | "/game/$game_/player/$player/activity"
    | "/game/$game_/player/$player/inventory"
    | "/game/$game_/player/$player/positions"
    | "/game/$game/edition/$edition/collection/$collection"
    | "/game/$game/edition/$edition/collection/$collection/activity"
    | "/game/$game/edition/$edition/collection/$collection/holders"
    | "/game/$game/edition/$edition/collection/$collection/items";
  fileRoutesById: FileRoutesById;
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  AboutRoute: typeof AboutRoute;
  GuildsRoute: typeof GuildsRoute;
  LeaderboardRoute: typeof LeaderboardRoute;
  MarketplaceRoute: typeof MarketplaceRoute;
  PredictRoute: typeof PredictRoute;
  CollectionCollectionRoute: typeof CollectionCollectionRouteWithChildren;
  GameGameRoute: typeof GameGameRouteWithChildren;
  PlayerPlayerRoute: typeof PlayerPlayerRouteWithChildren;
  GameGamePlayerPlayerRoute: typeof GameGamePlayerPlayerRouteWithChildren;
}

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/predict": {
      id: "/predict";
      path: "/predict";
      fullPath: "/predict";
      preLoaderRoute: typeof PredictRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/marketplace": {
      id: "/marketplace";
      path: "/marketplace";
      fullPath: "/marketplace";
      preLoaderRoute: typeof MarketplaceRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/leaderboard": {
      id: "/leaderboard";
      path: "/leaderboard";
      fullPath: "/leaderboard";
      preLoaderRoute: typeof LeaderboardRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/guilds": {
      id: "/guilds";
      path: "/guilds";
      fullPath: "/guilds";
      preLoaderRoute: typeof GuildsRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/about": {
      id: "/about";
      path: "/about";
      fullPath: "/about";
      preLoaderRoute: typeof AboutRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/player/$player": {
      id: "/player/$player";
      path: "/player/$player";
      fullPath: "/player/$player";
      preLoaderRoute: typeof PlayerPlayerRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/game/$game": {
      id: "/game/$game";
      path: "/game/$game";
      fullPath: "/game/$game";
      preLoaderRoute: typeof GameGameRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/collection/$collection": {
      id: "/collection/$collection";
      path: "/collection/$collection";
      fullPath: "/collection/$collection";
      preLoaderRoute: typeof CollectionCollectionRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/player/$player/positions": {
      id: "/player/$player/positions";
      path: "/positions";
      fullPath: "/player/$player/positions";
      preLoaderRoute: typeof PlayerPlayerPositionsRouteImport;
      parentRoute: typeof PlayerPlayerRoute;
    };
    "/player/$player/inventory": {
      id: "/player/$player/inventory";
      path: "/inventory";
      fullPath: "/player/$player/inventory";
      preLoaderRoute: typeof PlayerPlayerInventoryRouteImport;
      parentRoute: typeof PlayerPlayerRoute;
    };
    "/player/$player/activity": {
      id: "/player/$player/activity";
      path: "/activity";
      fullPath: "/player/$player/activity";
      preLoaderRoute: typeof PlayerPlayerActivityRouteImport;
      parentRoute: typeof PlayerPlayerRoute;
    };
    "/player/$player/achievements": {
      id: "/player/$player/achievements";
      path: "/achievements";
      fullPath: "/player/$player/achievements";
      preLoaderRoute: typeof PlayerPlayerAchievementsRouteImport;
      parentRoute: typeof PlayerPlayerRoute;
    };
    "/game/$game/predict": {
      id: "/game/$game/predict";
      path: "/predict";
      fullPath: "/game/$game/predict";
      preLoaderRoute: typeof GameGamePredictRouteImport;
      parentRoute: typeof GameGameRoute;
    };
    "/game/$game/marketplace": {
      id: "/game/$game/marketplace";
      path: "/marketplace";
      fullPath: "/game/$game/marketplace";
      preLoaderRoute: typeof GameGameMarketplaceRouteImport;
      parentRoute: typeof GameGameRoute;
    };
    "/game/$game/leaderboard": {
      id: "/game/$game/leaderboard";
      path: "/leaderboard";
      fullPath: "/game/$game/leaderboard";
      preLoaderRoute: typeof GameGameLeaderboardRouteImport;
      parentRoute: typeof GameGameRoute;
    };
    "/game/$game/guilds": {
      id: "/game/$game/guilds";
      path: "/guilds";
      fullPath: "/game/$game/guilds";
      preLoaderRoute: typeof GameGameGuildsRouteImport;
      parentRoute: typeof GameGameRoute;
    };
    "/game/$game/about": {
      id: "/game/$game/about";
      path: "/about";
      fullPath: "/game/$game/about";
      preLoaderRoute: typeof GameGameAboutRouteImport;
      parentRoute: typeof GameGameRoute;
    };
    "/collection/$collection/items": {
      id: "/collection/$collection/items";
      path: "/items";
      fullPath: "/collection/$collection/items";
      preLoaderRoute: typeof CollectionCollectionItemsRouteImport;
      parentRoute: typeof CollectionCollectionRoute;
    };
    "/collection/$collection/holders": {
      id: "/collection/$collection/holders";
      path: "/holders";
      fullPath: "/collection/$collection/holders";
      preLoaderRoute: typeof CollectionCollectionHoldersRouteImport;
      parentRoute: typeof CollectionCollectionRoute;
    };
    "/collection/$collection/activity": {
      id: "/collection/$collection/activity";
      path: "/activity";
      fullPath: "/collection/$collection/activity";
      preLoaderRoute: typeof CollectionCollectionActivityRouteImport;
      parentRoute: typeof CollectionCollectionRoute;
    };
    "/game/$game_/player/$player": {
      id: "/game/$game_/player/$player";
      path: "/game/$game/player/$player";
      fullPath: "/game/$game/player/$player";
      preLoaderRoute: typeof GameGamePlayerPlayerRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/game/$game/edition/$edition": {
      id: "/game/$game/edition/$edition";
      path: "/edition/$edition";
      fullPath: "/game/$game/edition/$edition";
      preLoaderRoute: typeof GameGameEditionEditionRouteImport;
      parentRoute: typeof GameGameRoute;
    };
    "/game/$game/collection/$collection": {
      id: "/game/$game/collection/$collection";
      path: "/collection/$collection";
      fullPath: "/game/$game/collection/$collection";
      preLoaderRoute: typeof GameGameCollectionCollectionRouteImport;
      parentRoute: typeof GameGameRoute;
    };
    "/game/$game_/player/$player/positions": {
      id: "/game/$game_/player/$player/positions";
      path: "/positions";
      fullPath: "/game/$game/player/$player/positions";
      preLoaderRoute: typeof GameGamePlayerPlayerPositionsRouteImport;
      parentRoute: typeof GameGamePlayerPlayerRoute;
    };
    "/game/$game_/player/$player/inventory": {
      id: "/game/$game_/player/$player/inventory";
      path: "/inventory";
      fullPath: "/game/$game/player/$player/inventory";
      preLoaderRoute: typeof GameGamePlayerPlayerInventoryRouteImport;
      parentRoute: typeof GameGamePlayerPlayerRoute;
    };
    "/game/$game_/player/$player/activity": {
      id: "/game/$game_/player/$player/activity";
      path: "/activity";
      fullPath: "/game/$game/player/$player/activity";
      preLoaderRoute: typeof GameGamePlayerPlayerActivityRouteImport;
      parentRoute: typeof GameGamePlayerPlayerRoute;
    };
    "/game/$game_/player/$player/achievements": {
      id: "/game/$game_/player/$player/achievements";
      path: "/achievements";
      fullPath: "/game/$game/player/$player/achievements";
      preLoaderRoute: typeof GameGamePlayerPlayerAchievementsRouteImport;
      parentRoute: typeof GameGamePlayerPlayerRoute;
    };
    "/game/$game/edition/$edition/marketplace": {
      id: "/game/$game/edition/$edition/marketplace";
      path: "/marketplace";
      fullPath: "/game/$game/edition/$edition/marketplace";
      preLoaderRoute: typeof GameGameEditionEditionMarketplaceRouteImport;
      parentRoute: typeof GameGameEditionEditionRoute;
    };
    "/game/$game/edition/$edition/leaderboard": {
      id: "/game/$game/edition/$edition/leaderboard";
      path: "/leaderboard";
      fullPath: "/game/$game/edition/$edition/leaderboard";
      preLoaderRoute: typeof GameGameEditionEditionLeaderboardRouteImport;
      parentRoute: typeof GameGameEditionEditionRoute;
    };
    "/game/$game/edition/$edition/guilds": {
      id: "/game/$game/edition/$edition/guilds";
      path: "/guilds";
      fullPath: "/game/$game/edition/$edition/guilds";
      preLoaderRoute: typeof GameGameEditionEditionGuildsRouteImport;
      parentRoute: typeof GameGameEditionEditionRoute;
    };
    "/game/$game/edition/$edition/activity": {
      id: "/game/$game/edition/$edition/activity";
      path: "/activity";
      fullPath: "/game/$game/edition/$edition/activity";
      preLoaderRoute: typeof GameGameEditionEditionActivityRouteImport;
      parentRoute: typeof GameGameEditionEditionRoute;
    };
    "/game/$game/edition/$edition/about": {
      id: "/game/$game/edition/$edition/about";
      path: "/about";
      fullPath: "/game/$game/edition/$edition/about";
      preLoaderRoute: typeof GameGameEditionEditionAboutRouteImport;
      parentRoute: typeof GameGameEditionEditionRoute;
    };
    "/game/$game/collection/$collection/items": {
      id: "/game/$game/collection/$collection/items";
      path: "/items";
      fullPath: "/game/$game/collection/$collection/items";
      preLoaderRoute: typeof GameGameCollectionCollectionItemsRouteImport;
      parentRoute: typeof GameGameCollectionCollectionRoute;
    };
    "/game/$game/collection/$collection/holders": {
      id: "/game/$game/collection/$collection/holders";
      path: "/holders";
      fullPath: "/game/$game/collection/$collection/holders";
      preLoaderRoute: typeof GameGameCollectionCollectionHoldersRouteImport;
      parentRoute: typeof GameGameCollectionCollectionRoute;
    };
    "/game/$game/collection/$collection/activity": {
      id: "/game/$game/collection/$collection/activity";
      path: "/activity";
      fullPath: "/game/$game/collection/$collection/activity";
      preLoaderRoute: typeof GameGameCollectionCollectionActivityRouteImport;
      parentRoute: typeof GameGameCollectionCollectionRoute;
    };
    "/game/$game/edition/$edition/collection/$collection": {
      id: "/game/$game/edition/$edition/collection/$collection";
      path: "/collection/$collection";
      fullPath: "/game/$game/edition/$edition/collection/$collection";
      preLoaderRoute: typeof GameGameEditionEditionCollectionCollectionRouteImport;
      parentRoute: typeof GameGameEditionEditionRoute;
    };
    "/game/$game/edition/$edition/collection/$collection/items": {
      id: "/game/$game/edition/$edition/collection/$collection/items";
      path: "/items";
      fullPath: "/game/$game/edition/$edition/collection/$collection/items";
      preLoaderRoute: typeof GameGameEditionEditionCollectionCollectionItemsRouteImport;
      parentRoute: typeof GameGameEditionEditionCollectionCollectionRoute;
    };
    "/game/$game/edition/$edition/collection/$collection/holders": {
      id: "/game/$game/edition/$edition/collection/$collection/holders";
      path: "/holders";
      fullPath: "/game/$game/edition/$edition/collection/$collection/holders";
      preLoaderRoute: typeof GameGameEditionEditionCollectionCollectionHoldersRouteImport;
      parentRoute: typeof GameGameEditionEditionCollectionCollectionRoute;
    };
    "/game/$game/edition/$edition/collection/$collection/activity": {
      id: "/game/$game/edition/$edition/collection/$collection/activity";
      path: "/activity";
      fullPath: "/game/$game/edition/$edition/collection/$collection/activity";
      preLoaderRoute: typeof GameGameEditionEditionCollectionCollectionActivityRouteImport;
      parentRoute: typeof GameGameEditionEditionCollectionCollectionRoute;
    };
  }
}

interface CollectionCollectionRouteChildren {
  CollectionCollectionActivityRoute: typeof CollectionCollectionActivityRoute;
  CollectionCollectionHoldersRoute: typeof CollectionCollectionHoldersRoute;
  CollectionCollectionItemsRoute: typeof CollectionCollectionItemsRoute;
}

const CollectionCollectionRouteChildren: CollectionCollectionRouteChildren = {
  CollectionCollectionActivityRoute: CollectionCollectionActivityRoute,
  CollectionCollectionHoldersRoute: CollectionCollectionHoldersRoute,
  CollectionCollectionItemsRoute: CollectionCollectionItemsRoute,
};

const CollectionCollectionRouteWithChildren =
  CollectionCollectionRoute._addFileChildren(CollectionCollectionRouteChildren);

interface GameGameCollectionCollectionRouteChildren {
  GameGameCollectionCollectionActivityRoute: typeof GameGameCollectionCollectionActivityRoute;
  GameGameCollectionCollectionHoldersRoute: typeof GameGameCollectionCollectionHoldersRoute;
  GameGameCollectionCollectionItemsRoute: typeof GameGameCollectionCollectionItemsRoute;
}

const GameGameCollectionCollectionRouteChildren: GameGameCollectionCollectionRouteChildren =
  {
    GameGameCollectionCollectionActivityRoute:
      GameGameCollectionCollectionActivityRoute,
    GameGameCollectionCollectionHoldersRoute:
      GameGameCollectionCollectionHoldersRoute,
    GameGameCollectionCollectionItemsRoute:
      GameGameCollectionCollectionItemsRoute,
  };

const GameGameCollectionCollectionRouteWithChildren =
  GameGameCollectionCollectionRoute._addFileChildren(
    GameGameCollectionCollectionRouteChildren,
  );

interface GameGameEditionEditionCollectionCollectionRouteChildren {
  GameGameEditionEditionCollectionCollectionActivityRoute: typeof GameGameEditionEditionCollectionCollectionActivityRoute;
  GameGameEditionEditionCollectionCollectionHoldersRoute: typeof GameGameEditionEditionCollectionCollectionHoldersRoute;
  GameGameEditionEditionCollectionCollectionItemsRoute: typeof GameGameEditionEditionCollectionCollectionItemsRoute;
}

const GameGameEditionEditionCollectionCollectionRouteChildren: GameGameEditionEditionCollectionCollectionRouteChildren =
  {
    GameGameEditionEditionCollectionCollectionActivityRoute:
      GameGameEditionEditionCollectionCollectionActivityRoute,
    GameGameEditionEditionCollectionCollectionHoldersRoute:
      GameGameEditionEditionCollectionCollectionHoldersRoute,
    GameGameEditionEditionCollectionCollectionItemsRoute:
      GameGameEditionEditionCollectionCollectionItemsRoute,
  };

const GameGameEditionEditionCollectionCollectionRouteWithChildren =
  GameGameEditionEditionCollectionCollectionRoute._addFileChildren(
    GameGameEditionEditionCollectionCollectionRouteChildren,
  );

interface GameGameEditionEditionRouteChildren {
  GameGameEditionEditionAboutRoute: typeof GameGameEditionEditionAboutRoute;
  GameGameEditionEditionActivityRoute: typeof GameGameEditionEditionActivityRoute;
  GameGameEditionEditionGuildsRoute: typeof GameGameEditionEditionGuildsRoute;
  GameGameEditionEditionLeaderboardRoute: typeof GameGameEditionEditionLeaderboardRoute;
  GameGameEditionEditionMarketplaceRoute: typeof GameGameEditionEditionMarketplaceRoute;
  GameGameEditionEditionCollectionCollectionRoute: typeof GameGameEditionEditionCollectionCollectionRouteWithChildren;
}

const GameGameEditionEditionRouteChildren: GameGameEditionEditionRouteChildren =
  {
    GameGameEditionEditionAboutRoute: GameGameEditionEditionAboutRoute,
    GameGameEditionEditionActivityRoute: GameGameEditionEditionActivityRoute,
    GameGameEditionEditionGuildsRoute: GameGameEditionEditionGuildsRoute,
    GameGameEditionEditionLeaderboardRoute:
      GameGameEditionEditionLeaderboardRoute,
    GameGameEditionEditionMarketplaceRoute:
      GameGameEditionEditionMarketplaceRoute,
    GameGameEditionEditionCollectionCollectionRoute:
      GameGameEditionEditionCollectionCollectionRouteWithChildren,
  };

const GameGameEditionEditionRouteWithChildren =
  GameGameEditionEditionRoute._addFileChildren(
    GameGameEditionEditionRouteChildren,
  );

interface GameGameRouteChildren {
  GameGameAboutRoute: typeof GameGameAboutRoute;
  GameGameGuildsRoute: typeof GameGameGuildsRoute;
  GameGameLeaderboardRoute: typeof GameGameLeaderboardRoute;
  GameGameMarketplaceRoute: typeof GameGameMarketplaceRoute;
  GameGamePredictRoute: typeof GameGamePredictRoute;
  GameGameCollectionCollectionRoute: typeof GameGameCollectionCollectionRouteWithChildren;
  GameGameEditionEditionRoute: typeof GameGameEditionEditionRouteWithChildren;
}

const GameGameRouteChildren: GameGameRouteChildren = {
  GameGameAboutRoute: GameGameAboutRoute,
  GameGameGuildsRoute: GameGameGuildsRoute,
  GameGameLeaderboardRoute: GameGameLeaderboardRoute,
  GameGameMarketplaceRoute: GameGameMarketplaceRoute,
  GameGamePredictRoute: GameGamePredictRoute,
  GameGameCollectionCollectionRoute:
    GameGameCollectionCollectionRouteWithChildren,
  GameGameEditionEditionRoute: GameGameEditionEditionRouteWithChildren,
};

const GameGameRouteWithChildren = GameGameRoute._addFileChildren(
  GameGameRouteChildren,
);

interface PlayerPlayerRouteChildren {
  PlayerPlayerAchievementsRoute: typeof PlayerPlayerAchievementsRoute;
  PlayerPlayerActivityRoute: typeof PlayerPlayerActivityRoute;
  PlayerPlayerInventoryRoute: typeof PlayerPlayerInventoryRoute;
  PlayerPlayerPositionsRoute: typeof PlayerPlayerPositionsRoute;
}

const PlayerPlayerRouteChildren: PlayerPlayerRouteChildren = {
  PlayerPlayerAchievementsRoute: PlayerPlayerAchievementsRoute,
  PlayerPlayerActivityRoute: PlayerPlayerActivityRoute,
  PlayerPlayerInventoryRoute: PlayerPlayerInventoryRoute,
  PlayerPlayerPositionsRoute: PlayerPlayerPositionsRoute,
};

const PlayerPlayerRouteWithChildren = PlayerPlayerRoute._addFileChildren(
  PlayerPlayerRouteChildren,
);

interface GameGamePlayerPlayerRouteChildren {
  GameGamePlayerPlayerAchievementsRoute: typeof GameGamePlayerPlayerAchievementsRoute;
  GameGamePlayerPlayerActivityRoute: typeof GameGamePlayerPlayerActivityRoute;
  GameGamePlayerPlayerInventoryRoute: typeof GameGamePlayerPlayerInventoryRoute;
  GameGamePlayerPlayerPositionsRoute: typeof GameGamePlayerPlayerPositionsRoute;
}

const GameGamePlayerPlayerRouteChildren: GameGamePlayerPlayerRouteChildren = {
  GameGamePlayerPlayerAchievementsRoute: GameGamePlayerPlayerAchievementsRoute,
  GameGamePlayerPlayerActivityRoute: GameGamePlayerPlayerActivityRoute,
  GameGamePlayerPlayerInventoryRoute: GameGamePlayerPlayerInventoryRoute,
  GameGamePlayerPlayerPositionsRoute: GameGamePlayerPlayerPositionsRoute,
};

const GameGamePlayerPlayerRouteWithChildren =
  GameGamePlayerPlayerRoute._addFileChildren(GameGamePlayerPlayerRouteChildren);

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  GuildsRoute: GuildsRoute,
  LeaderboardRoute: LeaderboardRoute,
  MarketplaceRoute: MarketplaceRoute,
  PredictRoute: PredictRoute,
  CollectionCollectionRoute: CollectionCollectionRouteWithChildren,
  GameGameRoute: GameGameRouteWithChildren,
  PlayerPlayerRoute: PlayerPlayerRouteWithChildren,
  GameGamePlayerPlayerRoute: GameGamePlayerPlayerRouteWithChildren,
};
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();
