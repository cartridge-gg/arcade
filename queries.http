### 

POST https://api.cartridge.gg/x/arcade-blobarena-mainnet/torii/sql HTTP/1.1
Accept: application/json
Content-Type: application/json HTTP/1.1

WITH recent_actions AS (
      SELECT
        tc.caller_address,
        t.executed_at,
        tc.entrypoint,
        LAG(t.executed_at) OVER (
          PARTITION BY tc.caller_address
          ORDER BY t.executed_at
        ) AS prev_executed_at
      FROM transactions t
      INNER JOIN transaction_calls tc
        ON tc.transaction_hash = t.transaction_hash
      INNER JOIN transaction_contract tco
        ON tco.transaction_hash = t.transaction_hash
      INNER JOIN contracts c
        ON c.contract_address = tco.contract_address
      WHERE c.contract_type = 'WORLD'
      AND tc.entrypoint NOT IN (
        'execute_from_outside_v3', 'request_random', 'submit_random',
        'assert_consumed', 'deployContract', 'set_name', 'register_model',
        'entities', 'init_contract', 'upgrade_model', 'emit_events',
        'emit_event', 'set_metadata'
      )
      -- Filter to recent data only (configurable days back, default 30)
      AND t.executed_at >= datetime('now', '-30 days')
    ),
    sessions_with_ids AS (
      SELECT
        caller_address,
        executed_at,
        entrypoint,
        SUM(
          CASE
            WHEN prev_executed_at IS NULL THEN 1
            -- Use julianday for better SQLite performance
            WHEN (julianday(executed_at) - julianday(prev_executed_at)) * 86400 > 3600 THEN 1
            ELSE 0
          END
        ) OVER (
          PARTITION BY caller_address
          ORDER BY executed_at
          ROWS UNBOUNDED PRECEDING
        ) AS session_id
      FROM recent_actions
    )
    SELECT
      '[' || GROUP_CONCAT(entrypoint, ',') || ']' AS entrypoints,
      caller_address AS callerAddress,
      MIN(executed_at) AS sessionStart,
      MAX(executed_at) AS sessionEnd,
      COUNT(*) AS actionCount
    FROM sessions_with_ids
    GROUP BY caller_address, session_id
    HAVING COUNT(*) > 0
    ORDER BY MAX(executed_at) DESC
    LIMIT 10000 OFFSET 0;
